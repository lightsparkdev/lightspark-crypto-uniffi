[package]
name = "lightspark-crypto"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
hex = "0.4.3"
rand_core = { "version" = "0.6.4", features = ["getrandom"] }
getrandom = { version = "0.2", features = ["js"] }
uniffi = "0.23.0"
wasm-bindgen = "0.2.87"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }
bitcoin = "0.30.1"
bip39 = { "version" = "2.0.0", features = ["rand"]}

[features]
default = ["uniffi/cli"]

[build-dependencies]
uniffi = { version = "0.23.0", features = [ "build" ] }

[lib]
crate-type = ["cdylib", "staticlib"]
name = "lightspark_crypto"

[[bin]]
name = "uniffi-bindgen"
path = "uniffi-bindgen.rs"

[profile.dev]
opt-level = 0
debug = true
split-debuginfo = 'unpacked'
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = true
codegen-units = 256
rpath = false

[profile.release]
opt-level = 3
debug = false
split-debuginfo = 'off'
debug-assertions = false
overflow-checks = false
lto = false
panic = 'unwind'
incremental = false
codegen-units = 16
rpath = false

[profile.release-smaller]
inherits = "release"
opt-level = 'z'     # Optimize for size.
lto = true          # Enable Link Time Optimization
codegen-units = 1   # Reduce number of codegen units to increase optimizations.
panic = 'abort'     # Abort on panic
strip = true        # Strip symbols from binary*

[dev-dependencies]
wasm-bindgen-test = "0.3.37"
