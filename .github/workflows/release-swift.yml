name: "Release Swift Library"
on:
  workflow_dispatch:
  push:

jobs:
  build-publish:
    name: Build, tag and create swift library
    runs-on: macos-12
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          path: build

      - name: Checkout swift repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/swift-wallet-sdk
          path: swift

      # - name: Install Rust targets
      #   working-directory: build
      #   run: |
      #     rustup target add aarch64-apple-ios x86_64-apple-ios
      #     rustup target add aarch64-apple-ios-sim
      #     rustup target add aarch64-apple-darwin x86_64-apple-darwin
      #
      # - name: Run uniffi bindgen
      #   working-directory: build
      #   run: |
      #     cargo run --bin uniffi-bindgen generate src/lightspark_crypto.udl --language swift --out-dir lightspark-crypto-swift
      #
      # - name: Build for x86_64-apple-darwin
      #   working-directory: build
      #   run: |
      #     cargo build --profile release --target x86_64-apple-darwin
      #
      # - name: Build for aarch64-apple-darwin
      #   working-directory: build
      #   run: |
      #     cargo build --profile release --target aarch64-apple-darwin
      #
      # - name: Build for x86_64-apple-ios
      #   working-directory: build
      #   run: |
      #     cargo build --profile release --target x86_64-apple-ios
      #
      # - name: Build for aarch64-apple-ios
      #   working-directory: build
      #   run: |
      #     cargo build --profile release --target aarch64-apple-ios
      #
      # - name: Build for aarch64-apple-ios-sim
      #   working-directory: build
      #   run: |
      #     cargo build --profile release --target aarch64-apple-ios-sim
      #
      # - name: Combine binaries
      #   working-directory: build
      #   run: |
      #     mkdir -p target/lipo-ios-sim/release
      #     lipo target/aarch64-apple-ios-sim/release/liblightspark_crypto.a target/x86_64-apple-ios/release/liblightspark_crypto.a -create -output target/lipo-ios-sim/release/liblightspark_crypto.a
      #     mkdir -p target/lipo-macos/release
      #     lipo target/aarch64-apple-darwin/release/liblightspark_crypto.a target/x86_64-apple-darwin/release/liblightspark_crypto.a -create -output target/lipo-macos/release/liblightspark_crypto.a

      - name: Setup xcframework
        working-directory: build
        run: |
          rm lightspark-cryptoFFI.xcframework.zip || true
          zip -9 -r lightspark-cryptoFFI.xcframework.zip lightspark-crypto-swift/lightspark_cryptoFFI.xcframework
          echo "LIGHTSPARKCRYPTOFFICHECKSUM=`swift package compute-checksum bdkFFI.xcframework.zip`" >> $GITHUB_ENV
          echo "LIGHTSPARKCRYPTOFFIURL=https\:\/\/github\.com\/${{ github.repository_owner }}\/lightspark\-crypto\-uniffi\/releases\/download\/test\/lightspark\-cryptoFFI\.xcframework\.zip" >> $GITHUB_ENV

      - name: Update Wallet SDK
        working-directory: build/lightspark-crypto-swift
        run: |
          echo checksum = ${{ env.LIGHTSPARKCRYPTOFFICHECKSUM }}
          echo url = ${{ env.LIGHTSPARKCRYPTOFFIURL }}
          sed "s/LIGHTSPARKCRYPTOFFICHECKSUM/${LIGHTSPARKCRYPTOFFICHECKSUM}/;s/LIGHTSPARKCRYPTOFFIURL/${LIGHTSPARKCRYPTOFFIURL}/" Package.swift.txt > ../../swift/Package.swift
          cp lightspark_crypto.swift ../../swift/Sources/LightsparkWallet/Crypto/LightsparkCrypto.swift
          cd ../../swift
          git add Package.swift
          git add Sources/LightsparkWallet/Crypto/LightsparkCrypto.swift
          git commit -m "Update crypto library."
          git push

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/lightspark-cryptoFFI.xcframework.zip"
          tag: "test"
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Test Release"
          prerelease: true

